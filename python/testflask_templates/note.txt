模板是呈現給用戶的介面
在MVT中為T，實現VT的解耦，開發中VT有這N:M的關係，
一個V可以調用任意T，一個T可以被任意V調用

模板處理分為量個過程
1.加載
2.渲染

模板代碼包含兩個部分
1.靜態HTML
2.動態插入的代碼段
#--------------------------------------------#
jinja2
Flask中使用jinja2模板引擎
jinja2由Flask作者開發
    一個現代化設計和有好的python模板語言
    模仿Django的模板引擎
優點
    速度快
    HTML設計和後端python分離
    減少python複雜度
    非常靈活，快速安全
    提供了控制，繼承等高級功能
#--------------------------------------------#
模板語言
    變量
    標籤
模板中變量
    視圖傳給模板的數據
    前面定義出來的數據
    變量不存在，默認忽略
模板中的標籤{%tag%}
    控制邏輯
    使用者外部表達式
    創建變量
    宏定義
#--------------------------------------------#
結構標籤
block
    {%block xxx%}
    {%endblock%}
    塊操作
        父模板挖坑，子模板填坑
extends
    {%extends 'xxx'%}

    繼承後保留塊中的內容
    {{super}}

挖坑繼承體現的是化整為零的操作
#--------------------------------------------#
反向解析
1.url_for
2.使用在app中
    url_for('endpoint')
    endpoint默認是函數的名子
3.使用blueprint中
    url_for('bluename.endpoint')
    藍圖名.函數名
4.獲取靜態資源路徑
    url_for('static',filename='path')
    static 資源
    path相對於資源的相對路徑
#--------------------------------------------#
模板
1.用來快速生成html頁面
2.模板主要由兩部分構成
    靜態html
    模板語法
3.模板語法
    {{ var }}
    {{% tag %}}
4.結構標籤
    block
            規劃型標籤
            首次出現挖坑
            非首次填坑
            多次填坑會出現覆蓋，不想覆蓋用{{super()}}
    extends
    include
            包含
            能用block + extends實現的，就盡量別用 include
    macro
            宏定義
            可以在html中定義函數
            還可以接受參數
            通過調用函數生成html
            支持導入操作
                {% from xxx import yyy %}
5.
#循環--------------------------------------------#
for
    {% for item in cols %}
        AA
    {% else %}
        BB
    {% endfor %}
可以使用python 一樣的for else
也可以獲取循環信息loop
loop.first
loop.last
loop.index loop.index0
loop.revindex loop.revindex0
#過濾器--------------------------------------------#
變量
    {{ 變量｜過濾器｜過濾器.....}}
    capitalize  駝峰
    lower
    upper
    title
    trim 把前後空格去掉
    reverse
    format
    striptags.渲染之前，將值中標籤去掉
    safe
    default
    last
    first
    length
    sum
    sort
    過濾器並不是先寫先執行
    safe是最後才做的
